/*
    This file is not pure qss and will generate errors if not pre-parsed to process variables.
    Variables are defined one-per-line, using Less-like syntax
    main.cpp uses regular expressions to find and replace variables in the css definitions
*/
/* Less-like variables parsed in main.cpp */
@LightSteelGrey: #A9B3BC; /*Control backgrounds, 2 shades lighter than SteelGrey*/
@SteelGrey: #8D99A6; /*Frame backgrounds */
@DarkSteelGrey: #708090; /*Nixie buttons*/
@LightSilver: #CDCDCD; /*Just a bit lighter than silver */
@SliderGroove: #999999; /*border*/
@SliderHandle: #5c5c5c;
@LCDNumberOff: #A0A0A0;
@LCDNumberOn: #FFFF00; /*Bright Orange*/
@LCDGradientStart: #353B43;
@LCDGradientMid: #BF4609;
@LCDGradientEnd: #353B43;

/*
Some examples
QLineEdit { background: yellow }
QPushButton { color: red }
*/
/*
	http://www.w3schools.com/tags/ref_colorpicker.asp
        Option 1: shades of lightSteelGrey
	Option 2: Shades of Powder Blue
	Option 3: Shades of Slate Gray
	Option 1	Option 2
	#7B899B		587073	708090	2 Darker

	#8D9DB2		7B9DA1	8D99A6	Frame background
	#9EB0C8
	#B0C4DE		9ECACF	A9B3BC	2 Lighter

*/


/* Make selected frames metal grey background */
QDialog, QFrame#comboFrame, QFrame#tunerFrame, QFrame#buttonFrame, QFrame#sliderFrame, QFrame#dataFrame, QFrame#spectrumFrame, QFrame#bandFrame,QWidget#DirectInput{
	/*
	Looking for close match to R390a or similar from that era
	This is a shade of LightSteelBlue that's pretty close on a Mac
	Labels should be white
	Knobs or equiv black
	Other backgrounds
	*/
        background-color: @SteelGrey;
}

/*Main application window */
QMainWindow {
	border-style: solid;
	border-width: 2px;
        border-color: @LightSilver; /* just a bit lighter than silver */
        background-color: @SteelGrey;
}

QLineEdit, QTextEdit {
	height: 16px;
	font-family: "Lucida Grande";
	font-size: 10px;
	font-weight: "normal";
	color: white;
        background-color: @LightSteelGrey;
}


/* All the up/down nixie buttons */
#nixieFrame QPushButton {
        background-color: @DarkSteelGrey;
}

QPushButton#powerButton:on {color:orange;}

QSlider{
	font-family: "Lucida Grande";
	font-size: 10px;
	font-weight: "normal";
}

QSlider::groove:horizontal {
         border: 1px solid @SliderGroove;
	 height: 8px; /* the groove expands to the size of the slider by default. by giving it a height, it has a fixed size */
         background: @LightSteelGrey;
	 margin: 2px 0;
 }
 QSlider::groove:vertical {
          border: 1px solid @SliderGroove;
	  width: 8px; /* the groove expands to the size of the slider by default. by giving it a height, it has a fixed size */
          background: @LightSteelGrey;
	  left: 2px;
	  right: 0px;
  }

QSlider::handle:horizontal {
         background: @DarkSteelGrey;
         border: 1px solid @SliderHandle;
	 width: 3px; /* plus radius and border */
	 margin: -4px 0; /* handle is placed by default on the contents rect of the groove. Expand outside the groove */
	 border-radius: 3px;
 }
 QSlider::handle:vertical {
          background: @DarkSteelGrey;
          border: 1px solid @SliderHandle;
	  height: 3px; /* plus radius and border */
	  margin: 0 -4px; /* handle is placed by default on the contents rect of the groove. Expand outside the groove */
	  border-radius: 3px;
  }


/*Color of groove after thumb*/
QSlider::add-page:horizontal {
        /*background: @LightSteelGrey;*/
}

/*Color of groove before thumb */
QSlider::sub-page:horizontal {
        /*background: @DarkSteelGrey;*/
}


QLabel {
	font-family: "Lucida Grande";
	font-size: 10px;
	font-weight: "normal";
	color: white;
}

QSpinBox {
	font-family: "Lucida Grande";
	font-size: 10px;
	font-weight: "normal";
	color: white;
        background-color: @SteelGrey; /*Same as BG color*/
}

QCheckBox {
	font-family: "Lucida Grande";
	font-size: 10px;
	font-weight: "normal";
	color: white;
        background-color: @SteelGrey; /*Same as BG color*/
}

QRadioButton {
	font-family: "Lucida Grande";
	font-size: 10px;
	font-weight: "normal";
	color: white;
        background-color: @SteelGrey; /*Same as BG color*/
}

QSplitter::handle {
        /*width: 5px;*/
        background-color: @SteelGrey; /*Same as BG color*/
}

/*Use this to eventually change .png used for checked/unchecked */
QRadioButton::indicator::unchecked{
	/* Empty for now */
}

QToolButton, QPushButton {
	height: 16px;
	font-family: "Lucida Grande";
	font-size: 10px;
	font-weight: "normal";
	color: white;
        background-color: @DarkSteelGrey; /*Darker*/

}

QComboBox {
	font-family: "Lucida Grande";
	font-size: 10px;
	font-weight: "normal";
	color: white;
        background-color: @LightSteelGrey; /*2 shade lighter than bg */
}
/* This handles the list view when the down arrow is pressed */
QComboBox QAbstractItemView {
	color: white;
        background-color: @LightSteelGrey; /*2 shade lighter than bg */
	/* Problem with white top,bottom space */
}
/*selected or about to be selected item in drop down list */
QComboBox::item::selected {
        background-color: @SteelGrey;
}

/*
Change the 'power' property on selected controls to turn background on/off
nixie1->setProperty( "power", "on");

Use Mac Digital Color Meter (Utilities) to sample Nixie tube pngs
Use http://www.w3schools.com/colors/colors_picker.asp for rgb color wheel

Gradient center color
rgb(191,70,9) or #BF4609 Low intensity orange
LCD segment 'on' color
rgb(255,225,0) bright orange
*/

/*ui id selector with property.  All QLCDNumber elements with a #tunerFrame[power="on"] ancestor*/
#nixieFrame[power="off"] QLCDNumber,
#clockFrame[power="off"] QLCDNumber{
    color: @LCDNumberOff;
    background-color: @DarkSteelGrey;
}

#nixieFrame[power="on"] QLCDNumber,
#clockFrame[power="on"] QLCDNumber{
    color: @LCDNumberOn;
    /*
    Use http://www.colorzilla.com/gradient-editor/ for gradient editing and preview
    x1:0,y1:0,x2:1,y2:1 Diagonal gradient from upper left (0,0) to lower right (1,1)
    x1:0,y1:0,x2:0,y2:1 Vertical gradient from upper left (0,0) to lower left (0,1)
    x1:0,y1:0,x2:1,y2:0 Horizontal gradient from upper left (0,0) to upper right (1,0)
    */
    background-color: qlineargradient(
        x1:0, y1:0, x2:1, y2:0,
        stop:0 @LCDGradientStart,
        stop:0.5 @LCDGradientMid,
        stop:1 @LCDGradientEnd);
}
