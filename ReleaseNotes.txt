Alpha build 221:
- Switched FCD support from libusb (which was problematic under windows) to Windows File IO as used in FCHID006.  No drivers required and will hopefully work for more people.
- Added logfile to support to aid in debugging.  Currently only used for FCD.

Alpha build 215:
- FunCube Dongle support: FCD now supported as full device with all firmware 18f options implemented.  Note: Requires libusb.
- SDRWidget support: Now supported as an explicit 'HPSDR mode' device, no ini mods required.  Not tested with Widget Beta yet.
- Each device now has its own IQ order option which is stored in device .ini file.  Once set, this is changed automatically when the device is selected.
- New manual IQ balance option.  This is set and saved for each device .ini file.
- FMW BPF changed, but FMW is still not working.
- Significant improvement to FMN demodulation.
- Improved BPF FFT implementation and settings for each mode.  
- Spectrum and Waterfall now displays BPF and actual frequency range instead of +/- range.
- Improved 192k performance due to post-mixer decimation to 24k
- PostMixer and PostBandpass displays are now waterfall instead of spectrum.

Alpha build 174:
- SDRWidget 0.5 support.  Speed sent via DG8SAQ, Freq sent to either HPSDR or DG8SAQ depending on hpsdr.ini setting.
- Added postMixerDecimate support.  This will downsample (decimate) after mixer to settings->decimateLimit so that remaining steps don't have to work at full bandwidth, which is CPU wasteful since we throw away everthing except signal of interest anyway.  This reduces a 2048 buffer to 256 when running at 192k.
- Added missing mingwm10.dll to install

Alpha build 168:
- Added new hpsdr.ini option SDRWidget.  Set to true to enable widget testing using hpsdr_v003 protocol. Setting this option also sets the NoInit flag, so you only need to change SDRWidget setting to test.  See B165 release notes for step by step

- Changes made per Alex Lee comments on SDR widget board.  Now opens DG8SAQ device in widget mode and uses for speed settings.

- HPSDR options working.  Speed, Dither, Random, Preamp.  In hpsdr.ini, you can edit GainPreampOn and GainPreampOff to set Pebble's pre-DSP gain.  Use this if audio and spectrum are too high or low for your preference.  Note that all device .ini files support a pre-dsp gain option.


Alpha Build 165: HPSDR and SDR-Widget Testing

This build has many internal changes and has not been fully tested on all devices.  The primary purpose of the release is to allow SDR-Widget beta users to test the HPSDR Protocol.  I do not have a working widget, so the following may or may not work:

To test with SDR-Widget
1. Run Pebble
2. Before clicking PWR, click settings and select HPSDR
3. Unplug any SDR devices and click PWR.
4. You will get a 'No Devices Connected' error, but more importantly you have now created an hpsdr.ini file in the directory where Pebble.exe is located.
5. Close Pebble
6. Edit the hpsdr.ini file and make the following changes
6a. If the Widget has a different PID/VID, edit PID=... and VID=...
6b. Edit NoInit=false to NoInit=true.  This skips HPSDR firmware check and upload
6c. If the SDR-Widget supports HPSDR speed commands, edit SPeed=0 as follows
	Speed=0 //48k
	Speed=1 //96k
	Speed=2 //192k
7. Rerun Pebble and see what happens.  Pebble works ok with my HPSDR configured with just Ozy and Mercury at all speeds/bandwidths.
8. If the SDR-Widget signal level is too low, edit the Gain=20 line and try different values.

Other changes in Build 165
- Added NoInit flag to skip firmware check for SDR-WIDGET.
- Internal refactoring of SDR class hierarchy to reduce coupling and make adding new devices easier.  Each device is now responsible for it's own data input, including audio. SDR::Factory() is now called to create all instances of sdr.
- Each SDR device now has its own .ini file (softrock.ini, elektor.ini, sdr-iq.ini, psdr.ini).  These files are auto-created when the device is selected and powered up.  Files can be edited after creation to change options that are not surfaced in UI.
- Plot area is now cleared and set to all black on startup or resize.  This reduces the artifacts from an uninitiailized buffer.
- Split audio into separate input and output instances for more flexibility with devices like sdr-iq and hpsdr.
- Experimental work on supporing QtAudio as option to PortAudio.  Works on output, not completed for input.
- MAJOR: Changed from VS2008 to QTCreator as development environment in preparation for Unix and Mac versions.  All files are now built with mingw (gcc) and compile without warning.  Note that there is a new gcc dll that's required for now.  Will eventually go away when static linking is supported.


Alpha Build 140:
Reverted to Visual Studio 2008 to eliminate dependency on VS 2010 runtime files.

Added ability to set serial number suffix for SoftRocks in SDR Options.  If multiple SoftRocks are plugged in at the same time, the serial number of the desired one can be specified in General Settings.  The default is 'Any', meaning that serial numbers are not checked.  If you set a specific serial number and that SoftRock is not connected, you will get a connection error.

libusb0.dll and ftd2xx.dll are now loaded explicitly and the program can be started without them.  If you try to connect to a SoftRock and do not have libusb0 installed, you will get an error message.  If you try to connect to an SDR-IQ or Elektor and do not have ftd2xx.dll installed, you will get an error message.

Alpha Build 131:
First broadly available alpha release
